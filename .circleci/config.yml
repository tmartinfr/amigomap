# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

defaults: &defaults
    docker:
        # specify the version you desire here
        # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
        - image: circleci/python:3.7.3
          environment:
              ALLOWED_HOST: '.localhost'
              PYTHONPATH: .
              DB_NAME: circle_test
              DB_USER: db
              DB_PASSWORD: db
              DB_HOST: localhost
              SECRET_KEY: secret

        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
        - image: circleci/postgres:9.6
          environment:
              POSTGRES_USER: db
              POSTGRES_PASSWORD: db

    working_directory: ~/repo

version: 2
jobs:
    checkout:
        <<: *defaults
        steps:
            - checkout
            - persist_to_workspace:
                root: ..
                paths:
                    - .

    build:
        <<: *defaults
        steps:
            - attach_workspace:
                at: ..

            - restore_cache:
                keys:
                  - v2-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/dev.txt" }}

            - run:
                name: install dependencies
                command: |
                  python3 -m venv ~/venv
                  . ~/venv/bin/activate
                  find /home
                  pip install -r requirements/dev.txt

            - save_cache:
                paths:
                  - ~/venv
                key: v2-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/dev.txt" }}

            - persist_to_workspace:
                root: ..
                paths:
                    - .

    test:
        <<: *defaults
        steps:
            - attach_workspace:
                at: ..

            - run:
                name: Run flake8
                command: |
                    find /home
                    . ~/venv/bin/activate
                    invoke flake8

            - run:
                name: Run isort
                command: |
                    . ~/venv/bin/activate
                    invoke isort

            - run:
                name: Run pytest
                command: |
                    . ~/venv/bin/activate
                    invoke pytest

            - store_artifacts:
                path: test-reports
                destination: test-reports

workflows:
    version: 2
    build-test-deploy:
        jobs:
            - checkout
            - build:
                requires:
                    - checkout
            - test:
                requires:
                    - build
